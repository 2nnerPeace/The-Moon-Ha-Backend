name: Deploy to Amazon EC2

on:
  push:
    branches:
      - develop #브랜치명

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
     - name:  기본 체크아웃
       uses: actions/checkout@v3
    
     - name: application.properties 설정
       run: |
          touch ./src/main/resources/application.properties
          echo "${{ secrets.APPLICATION }}" > ./src/main/resources/application.properties
          cat ./src/main/resources/application.properties
          
     - name: Run chmod to make gradlew executable
       run: chmod +x ./gradlew

     - name: Build with Gradle
       uses: gradle/gradle-build-action@0d13054264b0bb894ded474f08ebb30921341cee
       with:
        arguments: clean build -x test

     - name: Configure AWS credentials
       uses: aws-actions/configure-aws-credentials@v1
       with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}

    # S3 버킷에 업로드
     - name: Upload to AWS S3
       run: |
         aws deploy push \
           --application-name ${{ secrets.CODE_DEPLOY_APPLICATION_NAME }} \
           --ignore-hidden-files \
           --s3-location s3://${{ secrets.S3_BUCKET }}/$GITHUB_SHA.zip \
           --source .

    # CodeDeploy 실행
     - name: Deploy to AWS EC2 from S3
       run: |
        aws deploy create-deployment \
          --application-name ${{ secrets.CODE_DEPLOY_APPLICATION_NAME }} \
          --deployment-config-name CodeDeployDefault.AllAtOnce \
          --deployment-group-name ${{ secrets.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }} \
          --s3-location bucket=$${{ secrets.S3_BUCKET }},key=$GITHUB_SHA.zip,bundleType=zip
