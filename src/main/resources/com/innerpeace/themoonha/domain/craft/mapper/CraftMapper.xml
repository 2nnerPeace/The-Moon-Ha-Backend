<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
 * 문화공방 매퍼 XML
 * @author 손승완
 * @since 2024.08.25
 * @version 1.0
 *
 * <pre>
 * 수정일        	수정자        수정내용
 * ==========  =========    =========
 * 2024.08.25  	손승완        최초 생성
 * 2024.08.26  	손승완        프롤로그 상세 조회 쿼리 추가
 * 2024.08.27  	손승완        제안합니다 댓글 작성 쿼리 추가
 * </pre>
 -->
<mapper namespace="com.innerpeace.themoonha.domain.craft.mapper.CraftMapper">
    <select id="selectPrologueList"
            resultType="com.innerpeace.themoonha.domain.craft.dto.PrologueDTO">
        SELECT
            p.prologue_id,
            p.prologue_theme_id,
            t.name theme_name,
            t.description theme_description,
            p.title,
            p.thumbnail_url,
            p.video_url,
            count(l.like_cnt_id) like_cnt,
            nvl2(l.like_cnt_id, 1, 0) already_liked,
            m.name tutor_name
        FROM
            prologue p
        JOIN
            prologue_theme t
        ON
            p.prologue_theme_id = t.prologue_theme_id
        LEFT JOIN
            like_cnt l
        ON
            p.prologue_id = l.prologue_id and l.member_id = #{memberId}
        JOIN
            member m
        ON
            p.member_id = m.member_id
        WHERE
            p.deleted_at is null
        GROUP BY
            p.prologue_id, p.prologue_theme_id, p.title, p.thumbnail_url, p.video_url, l.like_cnt_id, t.name, t.description, m.name
        ORDER BY
            p.prologue_theme_id
    </select>

    <select id="selectWishLessonList"
            resultType="com.innerpeace.themoonha.domain.craft.dto.WishLessonDTO">
        select
            w.wish_lesson_id,
            w.title,
            (select count(v2.vote_id) from vote v2 where v2.wish_lesson_id = w.wish_lesson_id) as vote_cnt,
            w.theme,
            nvl2(v.vote_id, 1, 0) already_voted
        from
            wish_lesson w
        left join
            vote v
        on
            w.wish_lesson_id = v.wish_lesson_id and v.member_id = #{memberId}
        where
            w.deleted_at is null
        group by
            w.wish_lesson_id, w.title, w.theme, v.vote_id
        order by
            w.theme, already_voted desc
    </select>

    <select id="selectSuggestionList"
            resultType="com.innerpeace.themoonha.domain.craft.dto.SuggestionDTO">
        <![CDATA[
        select
            member_name,
            member_profile_img_url,
            content,
            created_at
        from
            (
             select /*+INDEX_DESC(s pk_suggestion)*/
                 rownum rn,
                 m.name member_name,
                 m.profile_img_url member_profile_img_url,
                 s.content,
                 s.created_at
             from
                 suggestion s
             join
                 member m
             on
                 s.member_id = m.member_id
             where
                 rownum <= #{pageNum} * #{size}
            )
        where
            rn > (#{pageNum} - 1) * #{size}
        ]]>
    </select>

    <select id="selectTotalSuggestion" resultType="java.lang.Integer">
        SELECT
            count(suggestion_id)
        FROM
            suggestion
    </select>

    <insert id="insertSuggestion">
        INSERT INTO
            suggestion(suggestion_id, member_id, content)
        VALUES
            (suggestion_seq.nextval, #{memberId}, #{suggestionRequest.content})
    </insert>

    <insert id="insertPrologueLike">
        INSERT INTO
            like_cnt (like_cnt_id, member_id, prologue_id)
        SELECT
            like_cnt_seq.nextval, #{memberId}, #{prologueId}
        FROM
            dual
        WHERE NOT EXISTS (
            SELECT 1
            FROM like_cnt
            WHERE member_id = #{memberId}
              AND prologue_id = #{prologueId}
        )
    </insert>

    <insert id="insertWishLessonVote">
        INSERT INTO
            vote(vote_id, wish_lesson_id, member_id)
        SELECT
            vote_seq.nextval, #{wishLessonId}, #{memberId}
        FROM
            dual
        WHERE NOT EXISTS (
            SELECT
                1
            FROM
                vote v
            JOIN
                wish_lesson w
            ON
                v.wish_lesson_id = w.wish_lesson_id
            WHERE
                v.member_id = #{memberId}
              AND w.theme = (SELECT theme FROM wish_lesson WHERE wish_lesson_id = #{wishLessonId})
        )
    </insert>
</mapper>
