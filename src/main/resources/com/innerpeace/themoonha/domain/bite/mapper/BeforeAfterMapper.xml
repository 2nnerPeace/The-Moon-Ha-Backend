<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 * 비포애프터 매퍼 XML
 * @author 김진규
 * @since 2024.08.27
 * @version 1.0
 *
 * <pre>
 * 수정일        	수정자        수정내용
 * ==========  =========    =========
 * 2024.08.27  김진규       최초 생성
 * 2024.08.27  김진규       findBeforeAfterList, insertBeforeAfter, findBeforeAfterListByTitle 쿼리 추가
 * 2024.08.28  김진규       insertHashtag, insertBeforeAfterHashtag, findBeforeAfterListByHashtags, findHashtag 쿼리 추가
 * 2024.08.30  김진규       insertHashtag, insertBeforeAfterHashtag, findHashtag 쿼리 삭제 및 insertHashtagAndBeforeAfterHashtag 쿼리 추가
 * </pre>
 -->
<mapper namespace="com.innerpeace.themoonha.domain.bite.mapper.BeforeAfterMapper">
    <!-- 비포애프터 리스트용 응답 정보 -->
    <resultMap id="BeforeAfterListResponseMap" type="com.innerpeace.themoonha.domain.bite.dto.beforeafter.BeforeAfterListResponse">
        <result property="beforeAfterId" column="beforeAfterId" />
        <result property="beforeThumbnailUrl" column="beforeThumbnailUrl" />
        <result property="afterThumbnailUrl" column="afterThumbnailUrl" />
        <result property="title" column="title" />
        <result property="profileImgUrl" column="profileImgUrl" />
        <result property="memberName" column="memberName" />
    </resultMap>

    <!-- 비포애프터 상세보기용 응답 정보 -->
    <resultMap id="BeforeAfterDetailResponseMap" type="com.innerpeace.themoonha.domain.bite.dto.beforeafter.BeforeAfterDetailResponse">
        <result property="beforeUrl" column="beforeUrl" />
        <result property="beforeIsImage" column="beforeIsImage" />
        <result property="afterUrl" column="afterUrl" />
        <result property="afterIsImage" column="afterIsImage" />
        <result property="title" column="title" />
        <result property="profileImgUrl" column="profileImgUrl" />
        <result property="memberName" column="memberName" />
        <result property="hashtags" column="hashtags" typeHandler="com.innerpeace.themoonha.global.handler.CommaSeparatedStringToListTypeHandler" />
    </resultMap>

    <!-- 비포애프터 검색 응답 정보 -->
    <resultMap id="BeforeAfterSearchResponseMap" type="com.innerpeace.themoonha.domain.bite.dto.beforeafter.BeforeAfterSearchResponse">
        <result property="beforeAfterId" column="beforeAfterId" />
        <result property="title" column="title" />
    </resultMap>

    <!-- 비포애프터 콘텐츠 등록 -->
    <insert id="insertBeforeAfter" parameterType="com.innerpeace.themoonha.domain.bite.dto.beforeafter.BeforeAfterDTO">
        <selectKey keyProperty="beforeAfterId" resultType="java.lang.Long" order="BEFORE">
            SELECT before_after_seq.NEXTVAL FROM DUAL
        </selectKey>

        INSERT INTO before_after (
            before_after_id,
            member_id,
            lesson_id,
            title,
            before_thumbnail_url,
            after_thumbnail_url,
            before_content_url,
            after_content_url,
            created_at,
            deleted_at
        ) VALUES (
            #{beforeAfterId},
            #{memberId},
            #{lessonId},
            #{title},
            #{beforeContentThumbnailUrl},
            #{afterContentThumbnailUrl},
            #{beforeContentUrl},
            #{afterContentUrl},
            sysdate,
            null
        )
    </insert>

    <!-- 해시태그 등록 및 비포애프터 해시태그 등록 -->
    <select id="insertHashtagAndBeforeAfterHashtag" statementType="CALLABLE">
        {CALL insert_hashtag_and_beforeafterhashtag(
            #{hashtags, mode=IN, jdbcTypeName=VARCHAR2_TABLE, typeHandler=com.innerpeace.themoonha.global.handler.StringListTypeHandler},
            #{beforeAfterId, mode=IN, jdbcType=NUMERIC}
        )}
    </select>

    <!-- 비포애프터 콘텐츠 상세 조회 -->
    <select id="findBeforeAfterDetail" resultMap="BeforeAfterDetailResponseMap">
        SELECT
            ba.before_content_url AS beforeUrl,
            CASE
                WHEN ba.before_content_url LIKE '%/image/%' THEN 1
                ELSE 0
            END as beforeIsImage,
            ba.after_content_url AS afterUrl,
            CASE
                WHEN ba.after_content_url LIKE '%/image/%' THEN 1
                ELSE 0
            END as afterIsImage,
            ba.title as title,
            m.profile_img_url AS profileImageUrl,
            m.name AS memberName,
            LISTAGG(h.name, ',') WITHIN GROUP (ORDER BY h.name ASC) AS hashtags
        FROM
            before_after ba
        JOIN
            member m ON ba.member_id = m.member_id
        LEFT JOIN
            before_after_hashtag bah ON ba.before_after_id = bah.before_after_id
        LEFT JOIN
            hashtag h ON bah.hashtag_id = h.hashtag_id
        WHERE ba.before_after_id = #{beforeAfterId}
        GROUP BY
            ba.before_content_url,
            ba.after_content_url,
            ba.title,
            m.profile_img_url,
            m.name
    </select>

    <!-- 비포애프터 콘텐츠 전체 목록 조회 -->
    <select id="findBeforeAfterList" resultMap="BeforeAfterListResponseMap">
        SELECT
            ba.before_after_id AS beforeAfterId,
            ba.before_thumbnail_url AS beforeThumbnailUrl,
            ba.after_thumbnail_url AS afterThumbnailUrl,
            ba.title,
            m.profile_img_url AS profileImgUrl,
            m.name AS memberName
        FROM before_after ba
        JOIN member m ON ba.member_id = m.member_id
        ORDER BY ba.before_after_id DESC
    </select>

    <!-- 비포애프터 콘텐츠 전체 목록 조회 -->
    <select id="findBeforeAfterListOrderByTitle" resultMap="BeforeAfterListResponseMap">
        SELECT
            ba.before_after_id AS beforeAfterId,
            ba.before_thumbnail_url AS beforeThumbnailUrl,
            ba.after_thumbnail_url AS afterThumbnailUrl,
            ba.title,
            m.profile_img_url AS profileImgUrl,
            m.name AS memberName
        FROM before_after ba
        JOIN member m ON ba.member_id = m.member_id
        ORDER BY ba.title ASC
    </select>

    <!-- 비포애프터 해시태그 기반 목록 검색 -->
    <select id="findBeforeAfterListByHashtags" resultMap="BeforeAfterSearchResponseMap">
        SELECT
            ba.before_after_id AS beforeAfterId,
            ba.title
        FROM before_after ba
        JOIN before_after_hashtag bah ON ba.before_after_id = bah.before_after_id
        JOIN hashtag h ON bah.hashtag_id = h.hashtag_id
        WHERE
            h.name IN
            <foreach collection="hashtags" item="name" open="(" separator="," close=")">
                #{name}
            </foreach>
    </select>

    <!-- 비포애프터 타이틀 기반 목록 검색 -->
    <select id="findBeforeAfterListByTitle" resultMap="BeforeAfterSearchResponseMap">
        SELECT
            before_after_id AS beforeAfterId,
            title
        FROM
            before_after
        WHERE
            title LIKE '%'|| #{keyword} || '%'
    </select>
</mapper>